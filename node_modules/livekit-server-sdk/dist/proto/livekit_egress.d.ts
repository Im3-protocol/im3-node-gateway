import * as _m0 from "protobufjs/minimal";
export declare const protobufPackage = "livekit";
export declare enum EncodedFileType {
    MP4 = 0,
    /** OGG - WEBM = 2; coming soon */
    OGG = 1,
    UNRECOGNIZED = -1
}
export declare function encodedFileTypeFromJSON(object: any): EncodedFileType;
export declare function encodedFileTypeToJSON(object: EncodedFileType): string;
export declare enum StreamProtocol {
    /** RTMP - SRT  = 1; coming soon */
    RTMP = 0,
    UNRECOGNIZED = -1
}
export declare function streamProtocolFromJSON(object: any): StreamProtocol;
export declare function streamProtocolToJSON(object: StreamProtocol): string;
export declare enum AudioCodec {
    DEFAULT_AC = 0,
    OPUS = 1,
    AAC = 2,
    UNRECOGNIZED = -1
}
export declare function audioCodecFromJSON(object: any): AudioCodec;
export declare function audioCodecToJSON(object: AudioCodec): string;
export declare enum VideoCodec {
    DEFAULT_VC = 0,
    H264_BASELINE = 1,
    H264_MAIN = 2,
    /**
     * H264_HIGH - HEVC = 4; coming soon
     *  VP8 = 5;  coming soon
     *  VP9 = 6;  coming soon
     */
    H264_HIGH = 3,
    UNRECOGNIZED = -1
}
export declare function videoCodecFromJSON(object: any): VideoCodec;
export declare function videoCodecToJSON(object: VideoCodec): string;
export declare enum EncodingOptionsPreset {
    /** H264_720P_30 - 720p, 30fps, 3000kpbs, H.264_MAIN / OPUS */
    H264_720P_30 = 0,
    /** H264_720P_60 - 720p, 60fps, 4500kbps, H.264_MAIN / OPUS */
    H264_720P_60 = 1,
    /** H264_1080P_30 - 1080p, 30fps, 4500kbps, H.264_MAIN / OPUS */
    H264_1080P_30 = 2,
    /** H264_1080P_60 - 1080p, 60fps, 6000kbps, H.264_MAIN / OPUS */
    H264_1080P_60 = 3,
    UNRECOGNIZED = -1
}
export declare function encodingOptionsPresetFromJSON(object: any): EncodingOptionsPreset;
export declare function encodingOptionsPresetToJSON(object: EncodingOptionsPreset): string;
export declare enum EgressStatus {
    EGRESS_STARTING = 0,
    EGRESS_ACTIVE = 1,
    EGRESS_ENDING = 2,
    EGRESS_COMPLETE = 3,
    UNRECOGNIZED = -1
}
export declare function egressStatusFromJSON(object: any): EgressStatus;
export declare function egressStatusToJSON(object: EgressStatus): string;
/** composite using a web browser */
export interface WebCompositeEgressRequest {
    /** required */
    roomName: string;
    /** (optional) */
    layout: string;
    /** (default false) */
    audioOnly: boolean;
    /** (default false) */
    videoOnly: boolean;
    /** (default https://recorder.livekit.io) */
    customBaseUrl: string;
    file?: EncodedFileOutput | undefined;
    stream?: StreamOutput | undefined;
    /** (default none) */
    preset: EncodingOptionsPreset | undefined;
    /** (default none) */
    advanced?: EncodingOptions | undefined;
}
/** composite a single audio and video track */
export interface TrackCompositeEgressRequest {
    /** required */
    roomName: string;
    /** required */
    audioTrackId: string;
    /** required */
    videoTrackId: string;
    file?: EncodedFileOutput | undefined;
    stream?: StreamOutput | undefined;
    /** (optional) */
    preset: EncodingOptionsPreset | undefined;
    /** (optional) */
    advanced?: EncodingOptions | undefined;
}
/** record tracks individually, without transcoding */
export interface TrackEgressRequest {
    /** required */
    roomName: string;
    /** required */
    trackId: string;
    httpUrl: string | undefined;
    websocketUrl: string | undefined;
}
export interface EncodedFileOutput {
    /** required, must be compatible with codec selection */
    fileType: EncodedFileType;
    filepath: string;
    s3?: S3Upload | undefined;
    gcp?: GCPUpload | undefined;
    azure?: AzureBlobUpload | undefined;
}
export interface S3Upload {
    accessKey: string;
    secret: string;
    region: string;
    endpoint: string;
    bucket: string;
}
export interface GCPUpload {
    credentials: Uint8Array;
    bucket: string;
}
export interface AzureBlobUpload {
    accountName: string;
    accountKey: string;
    containerName: string;
}
export interface StreamOutput {
    /** required */
    protocol: StreamProtocol;
    /** required */
    urls: string[];
}
export interface EncodingOptions {
    /** (default 1920) */
    width: number;
    /** (default 1080) */
    height: number;
    /** (default 24) */
    depth: number;
    /** (default 30) */
    framerate: number;
    /** (default OPUS) */
    audioCodec: AudioCodec;
    /** (default 128) */
    audioBitrate: number;
    /** (default 44100) */
    audioFrequency: number;
    /** (default H264_MAIN) */
    videoCodec: VideoCodec;
    /** (default 4500) */
    videoBitrate: number;
}
export interface UpdateLayoutRequest {
    egressId: string;
    layout: string;
}
export interface UpdateStreamRequest {
    egressId: string;
    addOutputUrls: string[];
    removeOutputUrls: string[];
}
export interface ListEgressRequest {
    /** optional, when empty lists all egresses */
    roomName: string;
}
export interface ListEgressResponse {
    items: EgressInfo[];
}
export interface StopEgressRequest {
    egressId: string;
}
export interface EgressInfo {
    egressId: string;
    roomId: string;
    status: EgressStatus;
    webComposite?: WebCompositeEgressRequest | undefined;
    trackComposite?: TrackCompositeEgressRequest | undefined;
    track?: TrackEgressRequest | undefined;
    stream?: StreamInfoList | undefined;
    file?: FileInfo | undefined;
    error: string;
}
export interface StreamInfoList {
    info: StreamInfo[];
}
export interface StreamInfo {
    url: string;
    startedAt: number;
    endedAt: number;
}
export interface FileInfo {
    filename: string;
    startedAt: number;
    endedAt: number;
    size: number;
    location: string;
}
export declare const WebCompositeEgressRequest: {
    encode(message: WebCompositeEgressRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): WebCompositeEgressRequest;
    fromJSON(object: any): WebCompositeEgressRequest;
    toJSON(message: WebCompositeEgressRequest): unknown;
    fromPartial<I extends {
        roomName?: string | undefined;
        layout?: string | undefined;
        audioOnly?: boolean | undefined;
        videoOnly?: boolean | undefined;
        customBaseUrl?: string | undefined;
        file?: {
            fileType?: EncodedFileType | undefined;
            filepath?: string | undefined;
            s3?: {
                accessKey?: string | undefined;
                secret?: string | undefined;
                region?: string | undefined;
                endpoint?: string | undefined;
                bucket?: string | undefined;
            } | undefined;
            gcp?: {
                credentials?: Uint8Array | undefined;
                bucket?: string | undefined;
            } | undefined;
            azure?: {
                accountName?: string | undefined;
                accountKey?: string | undefined;
                containerName?: string | undefined;
            } | undefined;
        } | undefined;
        stream?: {
            protocol?: StreamProtocol | undefined;
            urls?: string[] | undefined;
        } | undefined;
        preset?: EncodingOptionsPreset | undefined;
        advanced?: {
            width?: number | undefined;
            height?: number | undefined;
            depth?: number | undefined;
            framerate?: number | undefined;
            audioCodec?: AudioCodec | undefined;
            audioBitrate?: number | undefined;
            audioFrequency?: number | undefined;
            videoCodec?: VideoCodec | undefined;
            videoBitrate?: number | undefined;
        } | undefined;
    } & {
        roomName?: string | undefined;
        layout?: string | undefined;
        audioOnly?: boolean | undefined;
        videoOnly?: boolean | undefined;
        customBaseUrl?: string | undefined;
        file?: ({
            fileType?: EncodedFileType | undefined;
            filepath?: string | undefined;
            s3?: {
                accessKey?: string | undefined;
                secret?: string | undefined;
                region?: string | undefined;
                endpoint?: string | undefined;
                bucket?: string | undefined;
            } | undefined;
            gcp?: {
                credentials?: Uint8Array | undefined;
                bucket?: string | undefined;
            } | undefined;
            azure?: {
                accountName?: string | undefined;
                accountKey?: string | undefined;
                containerName?: string | undefined;
            } | undefined;
        } & {
            fileType?: EncodedFileType | undefined;
            filepath?: string | undefined;
            s3?: ({
                accessKey?: string | undefined;
                secret?: string | undefined;
                region?: string | undefined;
                endpoint?: string | undefined;
                bucket?: string | undefined;
            } & {
                accessKey?: string | undefined;
                secret?: string | undefined;
                region?: string | undefined;
                endpoint?: string | undefined;
                bucket?: string | undefined;
            } & Record<Exclude<keyof I["file"]["s3"], keyof S3Upload>, never>) | undefined;
            gcp?: ({
                credentials?: Uint8Array | undefined;
                bucket?: string | undefined;
            } & {
                credentials?: Uint8Array | undefined;
                bucket?: string | undefined;
            } & Record<Exclude<keyof I["file"]["gcp"], keyof GCPUpload>, never>) | undefined;
            azure?: ({
                accountName?: string | undefined;
                accountKey?: string | undefined;
                containerName?: string | undefined;
            } & {
                accountName?: string | undefined;
                accountKey?: string | undefined;
                containerName?: string | undefined;
            } & Record<Exclude<keyof I["file"]["azure"], keyof AzureBlobUpload>, never>) | undefined;
        } & Record<Exclude<keyof I["file"], keyof EncodedFileOutput>, never>) | undefined;
        stream?: ({
            protocol?: StreamProtocol | undefined;
            urls?: string[] | undefined;
        } & {
            protocol?: StreamProtocol | undefined;
            urls?: (string[] & string[] & Record<Exclude<keyof I["stream"]["urls"], number | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["stream"], keyof StreamOutput>, never>) | undefined;
        preset?: EncodingOptionsPreset | undefined;
        advanced?: ({
            width?: number | undefined;
            height?: number | undefined;
            depth?: number | undefined;
            framerate?: number | undefined;
            audioCodec?: AudioCodec | undefined;
            audioBitrate?: number | undefined;
            audioFrequency?: number | undefined;
            videoCodec?: VideoCodec | undefined;
            videoBitrate?: number | undefined;
        } & {
            width?: number | undefined;
            height?: number | undefined;
            depth?: number | undefined;
            framerate?: number | undefined;
            audioCodec?: AudioCodec | undefined;
            audioBitrate?: number | undefined;
            audioFrequency?: number | undefined;
            videoCodec?: VideoCodec | undefined;
            videoBitrate?: number | undefined;
        } & Record<Exclude<keyof I["advanced"], keyof EncodingOptions>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof WebCompositeEgressRequest>, never>>(object: I): WebCompositeEgressRequest;
};
export declare const TrackCompositeEgressRequest: {
    encode(message: TrackCompositeEgressRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): TrackCompositeEgressRequest;
    fromJSON(object: any): TrackCompositeEgressRequest;
    toJSON(message: TrackCompositeEgressRequest): unknown;
    fromPartial<I extends {
        roomName?: string | undefined;
        audioTrackId?: string | undefined;
        videoTrackId?: string | undefined;
        file?: {
            fileType?: EncodedFileType | undefined;
            filepath?: string | undefined;
            s3?: {
                accessKey?: string | undefined;
                secret?: string | undefined;
                region?: string | undefined;
                endpoint?: string | undefined;
                bucket?: string | undefined;
            } | undefined;
            gcp?: {
                credentials?: Uint8Array | undefined;
                bucket?: string | undefined;
            } | undefined;
            azure?: {
                accountName?: string | undefined;
                accountKey?: string | undefined;
                containerName?: string | undefined;
            } | undefined;
        } | undefined;
        stream?: {
            protocol?: StreamProtocol | undefined;
            urls?: string[] | undefined;
        } | undefined;
        preset?: EncodingOptionsPreset | undefined;
        advanced?: {
            width?: number | undefined;
            height?: number | undefined;
            depth?: number | undefined;
            framerate?: number | undefined;
            audioCodec?: AudioCodec | undefined;
            audioBitrate?: number | undefined;
            audioFrequency?: number | undefined;
            videoCodec?: VideoCodec | undefined;
            videoBitrate?: number | undefined;
        } | undefined;
    } & {
        roomName?: string | undefined;
        audioTrackId?: string | undefined;
        videoTrackId?: string | undefined;
        file?: ({
            fileType?: EncodedFileType | undefined;
            filepath?: string | undefined;
            s3?: {
                accessKey?: string | undefined;
                secret?: string | undefined;
                region?: string | undefined;
                endpoint?: string | undefined;
                bucket?: string | undefined;
            } | undefined;
            gcp?: {
                credentials?: Uint8Array | undefined;
                bucket?: string | undefined;
            } | undefined;
            azure?: {
                accountName?: string | undefined;
                accountKey?: string | undefined;
                containerName?: string | undefined;
            } | undefined;
        } & {
            fileType?: EncodedFileType | undefined;
            filepath?: string | undefined;
            s3?: ({
                accessKey?: string | undefined;
                secret?: string | undefined;
                region?: string | undefined;
                endpoint?: string | undefined;
                bucket?: string | undefined;
            } & {
                accessKey?: string | undefined;
                secret?: string | undefined;
                region?: string | undefined;
                endpoint?: string | undefined;
                bucket?: string | undefined;
            } & Record<Exclude<keyof I["file"]["s3"], keyof S3Upload>, never>) | undefined;
            gcp?: ({
                credentials?: Uint8Array | undefined;
                bucket?: string | undefined;
            } & {
                credentials?: Uint8Array | undefined;
                bucket?: string | undefined;
            } & Record<Exclude<keyof I["file"]["gcp"], keyof GCPUpload>, never>) | undefined;
            azure?: ({
                accountName?: string | undefined;
                accountKey?: string | undefined;
                containerName?: string | undefined;
            } & {
                accountName?: string | undefined;
                accountKey?: string | undefined;
                containerName?: string | undefined;
            } & Record<Exclude<keyof I["file"]["azure"], keyof AzureBlobUpload>, never>) | undefined;
        } & Record<Exclude<keyof I["file"], keyof EncodedFileOutput>, never>) | undefined;
        stream?: ({
            protocol?: StreamProtocol | undefined;
            urls?: string[] | undefined;
        } & {
            protocol?: StreamProtocol | undefined;
            urls?: (string[] & string[] & Record<Exclude<keyof I["stream"]["urls"], number | keyof string[]>, never>) | undefined;
        } & Record<Exclude<keyof I["stream"], keyof StreamOutput>, never>) | undefined;
        preset?: EncodingOptionsPreset | undefined;
        advanced?: ({
            width?: number | undefined;
            height?: number | undefined;
            depth?: number | undefined;
            framerate?: number | undefined;
            audioCodec?: AudioCodec | undefined;
            audioBitrate?: number | undefined;
            audioFrequency?: number | undefined;
            videoCodec?: VideoCodec | undefined;
            videoBitrate?: number | undefined;
        } & {
            width?: number | undefined;
            height?: number | undefined;
            depth?: number | undefined;
            framerate?: number | undefined;
            audioCodec?: AudioCodec | undefined;
            audioBitrate?: number | undefined;
            audioFrequency?: number | undefined;
            videoCodec?: VideoCodec | undefined;
            videoBitrate?: number | undefined;
        } & Record<Exclude<keyof I["advanced"], keyof EncodingOptions>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof TrackCompositeEgressRequest>, never>>(object: I): TrackCompositeEgressRequest;
};
export declare const TrackEgressRequest: {
    encode(message: TrackEgressRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): TrackEgressRequest;
    fromJSON(object: any): TrackEgressRequest;
    toJSON(message: TrackEgressRequest): unknown;
    fromPartial<I extends {
        roomName?: string | undefined;
        trackId?: string | undefined;
        httpUrl?: string | undefined;
        websocketUrl?: string | undefined;
    } & {
        roomName?: string | undefined;
        trackId?: string | undefined;
        httpUrl?: string | undefined;
        websocketUrl?: string | undefined;
    } & Record<Exclude<keyof I, keyof TrackEgressRequest>, never>>(object: I): TrackEgressRequest;
};
export declare const EncodedFileOutput: {
    encode(message: EncodedFileOutput, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): EncodedFileOutput;
    fromJSON(object: any): EncodedFileOutput;
    toJSON(message: EncodedFileOutput): unknown;
    fromPartial<I extends {
        fileType?: EncodedFileType | undefined;
        filepath?: string | undefined;
        s3?: {
            accessKey?: string | undefined;
            secret?: string | undefined;
            region?: string | undefined;
            endpoint?: string | undefined;
            bucket?: string | undefined;
        } | undefined;
        gcp?: {
            credentials?: Uint8Array | undefined;
            bucket?: string | undefined;
        } | undefined;
        azure?: {
            accountName?: string | undefined;
            accountKey?: string | undefined;
            containerName?: string | undefined;
        } | undefined;
    } & {
        fileType?: EncodedFileType | undefined;
        filepath?: string | undefined;
        s3?: ({
            accessKey?: string | undefined;
            secret?: string | undefined;
            region?: string | undefined;
            endpoint?: string | undefined;
            bucket?: string | undefined;
        } & {
            accessKey?: string | undefined;
            secret?: string | undefined;
            region?: string | undefined;
            endpoint?: string | undefined;
            bucket?: string | undefined;
        } & Record<Exclude<keyof I["s3"], keyof S3Upload>, never>) | undefined;
        gcp?: ({
            credentials?: Uint8Array | undefined;
            bucket?: string | undefined;
        } & {
            credentials?: Uint8Array | undefined;
            bucket?: string | undefined;
        } & Record<Exclude<keyof I["gcp"], keyof GCPUpload>, never>) | undefined;
        azure?: ({
            accountName?: string | undefined;
            accountKey?: string | undefined;
            containerName?: string | undefined;
        } & {
            accountName?: string | undefined;
            accountKey?: string | undefined;
            containerName?: string | undefined;
        } & Record<Exclude<keyof I["azure"], keyof AzureBlobUpload>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof EncodedFileOutput>, never>>(object: I): EncodedFileOutput;
};
export declare const S3Upload: {
    encode(message: S3Upload, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): S3Upload;
    fromJSON(object: any): S3Upload;
    toJSON(message: S3Upload): unknown;
    fromPartial<I extends {
        accessKey?: string | undefined;
        secret?: string | undefined;
        region?: string | undefined;
        endpoint?: string | undefined;
        bucket?: string | undefined;
    } & {
        accessKey?: string | undefined;
        secret?: string | undefined;
        region?: string | undefined;
        endpoint?: string | undefined;
        bucket?: string | undefined;
    } & Record<Exclude<keyof I, keyof S3Upload>, never>>(object: I): S3Upload;
};
export declare const GCPUpload: {
    encode(message: GCPUpload, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GCPUpload;
    fromJSON(object: any): GCPUpload;
    toJSON(message: GCPUpload): unknown;
    fromPartial<I extends {
        credentials?: Uint8Array | undefined;
        bucket?: string | undefined;
    } & {
        credentials?: Uint8Array | undefined;
        bucket?: string | undefined;
    } & Record<Exclude<keyof I, keyof GCPUpload>, never>>(object: I): GCPUpload;
};
export declare const AzureBlobUpload: {
    encode(message: AzureBlobUpload, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AzureBlobUpload;
    fromJSON(object: any): AzureBlobUpload;
    toJSON(message: AzureBlobUpload): unknown;
    fromPartial<I extends {
        accountName?: string | undefined;
        accountKey?: string | undefined;
        containerName?: string | undefined;
    } & {
        accountName?: string | undefined;
        accountKey?: string | undefined;
        containerName?: string | undefined;
    } & Record<Exclude<keyof I, keyof AzureBlobUpload>, never>>(object: I): AzureBlobUpload;
};
export declare const StreamOutput: {
    encode(message: StreamOutput, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StreamOutput;
    fromJSON(object: any): StreamOutput;
    toJSON(message: StreamOutput): unknown;
    fromPartial<I extends {
        protocol?: StreamProtocol | undefined;
        urls?: string[] | undefined;
    } & {
        protocol?: StreamProtocol | undefined;
        urls?: (string[] & string[] & Record<Exclude<keyof I["urls"], number | keyof string[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof StreamOutput>, never>>(object: I): StreamOutput;
};
export declare const EncodingOptions: {
    encode(message: EncodingOptions, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): EncodingOptions;
    fromJSON(object: any): EncodingOptions;
    toJSON(message: EncodingOptions): unknown;
    fromPartial<I extends {
        width?: number | undefined;
        height?: number | undefined;
        depth?: number | undefined;
        framerate?: number | undefined;
        audioCodec?: AudioCodec | undefined;
        audioBitrate?: number | undefined;
        audioFrequency?: number | undefined;
        videoCodec?: VideoCodec | undefined;
        videoBitrate?: number | undefined;
    } & {
        width?: number | undefined;
        height?: number | undefined;
        depth?: number | undefined;
        framerate?: number | undefined;
        audioCodec?: AudioCodec | undefined;
        audioBitrate?: number | undefined;
        audioFrequency?: number | undefined;
        videoCodec?: VideoCodec | undefined;
        videoBitrate?: number | undefined;
    } & Record<Exclude<keyof I, keyof EncodingOptions>, never>>(object: I): EncodingOptions;
};
export declare const UpdateLayoutRequest: {
    encode(message: UpdateLayoutRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateLayoutRequest;
    fromJSON(object: any): UpdateLayoutRequest;
    toJSON(message: UpdateLayoutRequest): unknown;
    fromPartial<I extends {
        egressId?: string | undefined;
        layout?: string | undefined;
    } & {
        egressId?: string | undefined;
        layout?: string | undefined;
    } & Record<Exclude<keyof I, keyof UpdateLayoutRequest>, never>>(object: I): UpdateLayoutRequest;
};
export declare const UpdateStreamRequest: {
    encode(message: UpdateStreamRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateStreamRequest;
    fromJSON(object: any): UpdateStreamRequest;
    toJSON(message: UpdateStreamRequest): unknown;
    fromPartial<I extends {
        egressId?: string | undefined;
        addOutputUrls?: string[] | undefined;
        removeOutputUrls?: string[] | undefined;
    } & {
        egressId?: string | undefined;
        addOutputUrls?: (string[] & string[] & Record<Exclude<keyof I["addOutputUrls"], number | keyof string[]>, never>) | undefined;
        removeOutputUrls?: (string[] & string[] & Record<Exclude<keyof I["removeOutputUrls"], number | keyof string[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof UpdateStreamRequest>, never>>(object: I): UpdateStreamRequest;
};
export declare const ListEgressRequest: {
    encode(message: ListEgressRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListEgressRequest;
    fromJSON(object: any): ListEgressRequest;
    toJSON(message: ListEgressRequest): unknown;
    fromPartial<I extends {
        roomName?: string | undefined;
    } & {
        roomName?: string | undefined;
    } & Record<Exclude<keyof I, "roomName">, never>>(object: I): ListEgressRequest;
};
export declare const ListEgressResponse: {
    encode(message: ListEgressResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ListEgressResponse;
    fromJSON(object: any): ListEgressResponse;
    toJSON(message: ListEgressResponse): unknown;
    fromPartial<I extends {
        items?: {
            egressId?: string | undefined;
            roomId?: string | undefined;
            status?: EgressStatus | undefined;
            webComposite?: {
                roomName?: string | undefined;
                layout?: string | undefined;
                audioOnly?: boolean | undefined;
                videoOnly?: boolean | undefined;
                customBaseUrl?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } | undefined;
            trackComposite?: {
                roomName?: string | undefined;
                audioTrackId?: string | undefined;
                videoTrackId?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } | undefined;
            track?: {
                roomName?: string | undefined;
                trackId?: string | undefined;
                httpUrl?: string | undefined;
                websocketUrl?: string | undefined;
            } | undefined;
            stream?: {
                info?: {
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                }[] | undefined;
            } | undefined;
            file?: {
                filename?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
                size?: number | undefined;
                location?: string | undefined;
            } | undefined;
            error?: string | undefined;
        }[] | undefined;
    } & {
        items?: ({
            egressId?: string | undefined;
            roomId?: string | undefined;
            status?: EgressStatus | undefined;
            webComposite?: {
                roomName?: string | undefined;
                layout?: string | undefined;
                audioOnly?: boolean | undefined;
                videoOnly?: boolean | undefined;
                customBaseUrl?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } | undefined;
            trackComposite?: {
                roomName?: string | undefined;
                audioTrackId?: string | undefined;
                videoTrackId?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } | undefined;
            track?: {
                roomName?: string | undefined;
                trackId?: string | undefined;
                httpUrl?: string | undefined;
                websocketUrl?: string | undefined;
            } | undefined;
            stream?: {
                info?: {
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                }[] | undefined;
            } | undefined;
            file?: {
                filename?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
                size?: number | undefined;
                location?: string | undefined;
            } | undefined;
            error?: string | undefined;
        }[] & ({
            egressId?: string | undefined;
            roomId?: string | undefined;
            status?: EgressStatus | undefined;
            webComposite?: {
                roomName?: string | undefined;
                layout?: string | undefined;
                audioOnly?: boolean | undefined;
                videoOnly?: boolean | undefined;
                customBaseUrl?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } | undefined;
            trackComposite?: {
                roomName?: string | undefined;
                audioTrackId?: string | undefined;
                videoTrackId?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } | undefined;
            track?: {
                roomName?: string | undefined;
                trackId?: string | undefined;
                httpUrl?: string | undefined;
                websocketUrl?: string | undefined;
            } | undefined;
            stream?: {
                info?: {
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                }[] | undefined;
            } | undefined;
            file?: {
                filename?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
                size?: number | undefined;
                location?: string | undefined;
            } | undefined;
            error?: string | undefined;
        } & {
            egressId?: string | undefined;
            roomId?: string | undefined;
            status?: EgressStatus | undefined;
            webComposite?: ({
                roomName?: string | undefined;
                layout?: string | undefined;
                audioOnly?: boolean | undefined;
                videoOnly?: boolean | undefined;
                customBaseUrl?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } & {
                roomName?: string | undefined;
                layout?: string | undefined;
                audioOnly?: boolean | undefined;
                videoOnly?: boolean | undefined;
                customBaseUrl?: string | undefined;
                file?: ({
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } & {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: ({
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } & {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } & Record<Exclude<keyof I["items"][number]["webComposite"]["file"]["s3"], keyof S3Upload>, never>) | undefined;
                    gcp?: ({
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } & {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } & Record<Exclude<keyof I["items"][number]["webComposite"]["file"]["gcp"], keyof GCPUpload>, never>) | undefined;
                    azure?: ({
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } & {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } & Record<Exclude<keyof I["items"][number]["webComposite"]["file"]["azure"], keyof AzureBlobUpload>, never>) | undefined;
                } & Record<Exclude<keyof I["items"][number]["webComposite"]["file"], keyof EncodedFileOutput>, never>) | undefined;
                stream?: ({
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } & {
                    protocol?: StreamProtocol | undefined;
                    urls?: (string[] & string[] & Record<Exclude<keyof I["items"][number]["webComposite"]["stream"]["urls"], number | keyof string[]>, never>) | undefined;
                } & Record<Exclude<keyof I["items"][number]["webComposite"]["stream"], keyof StreamOutput>, never>) | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: ({
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } & {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } & Record<Exclude<keyof I["items"][number]["webComposite"]["advanced"], keyof EncodingOptions>, never>) | undefined;
            } & Record<Exclude<keyof I["items"][number]["webComposite"], keyof WebCompositeEgressRequest>, never>) | undefined;
            trackComposite?: ({
                roomName?: string | undefined;
                audioTrackId?: string | undefined;
                videoTrackId?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } & {
                roomName?: string | undefined;
                audioTrackId?: string | undefined;
                videoTrackId?: string | undefined;
                file?: ({
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } & {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: ({
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } & {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } & Record<Exclude<keyof I["items"][number]["trackComposite"]["file"]["s3"], keyof S3Upload>, never>) | undefined;
                    gcp?: ({
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } & {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } & Record<Exclude<keyof I["items"][number]["trackComposite"]["file"]["gcp"], keyof GCPUpload>, never>) | undefined;
                    azure?: ({
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } & {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } & Record<Exclude<keyof I["items"][number]["trackComposite"]["file"]["azure"], keyof AzureBlobUpload>, never>) | undefined;
                } & Record<Exclude<keyof I["items"][number]["trackComposite"]["file"], keyof EncodedFileOutput>, never>) | undefined;
                stream?: ({
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } & {
                    protocol?: StreamProtocol | undefined;
                    urls?: (string[] & string[] & Record<Exclude<keyof I["items"][number]["trackComposite"]["stream"]["urls"], number | keyof string[]>, never>) | undefined;
                } & Record<Exclude<keyof I["items"][number]["trackComposite"]["stream"], keyof StreamOutput>, never>) | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: ({
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } & {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } & Record<Exclude<keyof I["items"][number]["trackComposite"]["advanced"], keyof EncodingOptions>, never>) | undefined;
            } & Record<Exclude<keyof I["items"][number]["trackComposite"], keyof TrackCompositeEgressRequest>, never>) | undefined;
            track?: ({
                roomName?: string | undefined;
                trackId?: string | undefined;
                httpUrl?: string | undefined;
                websocketUrl?: string | undefined;
            } & {
                roomName?: string | undefined;
                trackId?: string | undefined;
                httpUrl?: string | undefined;
                websocketUrl?: string | undefined;
            } & Record<Exclude<keyof I["items"][number]["track"], keyof TrackEgressRequest>, never>) | undefined;
            stream?: ({
                info?: {
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                }[] | undefined;
            } & {
                info?: ({
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                }[] & ({
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                } & {
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                } & Record<Exclude<keyof I["items"][number]["stream"]["info"][number], keyof StreamInfo>, never>)[] & Record<Exclude<keyof I["items"][number]["stream"]["info"], number | keyof {
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                }[]>, never>) | undefined;
            } & Record<Exclude<keyof I["items"][number]["stream"], "info">, never>) | undefined;
            file?: ({
                filename?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
                size?: number | undefined;
                location?: string | undefined;
            } & {
                filename?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
                size?: number | undefined;
                location?: string | undefined;
            } & Record<Exclude<keyof I["items"][number]["file"], keyof FileInfo>, never>) | undefined;
            error?: string | undefined;
        } & Record<Exclude<keyof I["items"][number], keyof EgressInfo>, never>)[] & Record<Exclude<keyof I["items"], number | keyof {
            egressId?: string | undefined;
            roomId?: string | undefined;
            status?: EgressStatus | undefined;
            webComposite?: {
                roomName?: string | undefined;
                layout?: string | undefined;
                audioOnly?: boolean | undefined;
                videoOnly?: boolean | undefined;
                customBaseUrl?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } | undefined;
            trackComposite?: {
                roomName?: string | undefined;
                audioTrackId?: string | undefined;
                videoTrackId?: string | undefined;
                file?: {
                    fileType?: EncodedFileType | undefined;
                    filepath?: string | undefined;
                    s3?: {
                        accessKey?: string | undefined;
                        secret?: string | undefined;
                        region?: string | undefined;
                        endpoint?: string | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    gcp?: {
                        credentials?: Uint8Array | undefined;
                        bucket?: string | undefined;
                    } | undefined;
                    azure?: {
                        accountName?: string | undefined;
                        accountKey?: string | undefined;
                        containerName?: string | undefined;
                    } | undefined;
                } | undefined;
                stream?: {
                    protocol?: StreamProtocol | undefined;
                    urls?: string[] | undefined;
                } | undefined;
                preset?: EncodingOptionsPreset | undefined;
                advanced?: {
                    width?: number | undefined;
                    height?: number | undefined;
                    depth?: number | undefined;
                    framerate?: number | undefined;
                    audioCodec?: AudioCodec | undefined;
                    audioBitrate?: number | undefined;
                    audioFrequency?: number | undefined;
                    videoCodec?: VideoCodec | undefined;
                    videoBitrate?: number | undefined;
                } | undefined;
            } | undefined;
            track?: {
                roomName?: string | undefined;
                trackId?: string | undefined;
                httpUrl?: string | undefined;
                websocketUrl?: string | undefined;
            } | undefined;
            stream?: {
                info?: {
                    url?: string | undefined;
                    startedAt?: number | undefined;
                    endedAt?: number | undefined;
                }[] | undefined;
            } | undefined;
            file?: {
                filename?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
                size?: number | undefined;
                location?: string | undefined;
            } | undefined;
            error?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "items">, never>>(object: I): ListEgressResponse;
};
export declare const StopEgressRequest: {
    encode(message: StopEgressRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StopEgressRequest;
    fromJSON(object: any): StopEgressRequest;
    toJSON(message: StopEgressRequest): unknown;
    fromPartial<I extends {
        egressId?: string | undefined;
    } & {
        egressId?: string | undefined;
    } & Record<Exclude<keyof I, "egressId">, never>>(object: I): StopEgressRequest;
};
export declare const EgressInfo: {
    encode(message: EgressInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): EgressInfo;
    fromJSON(object: any): EgressInfo;
    toJSON(message: EgressInfo): unknown;
    fromPartial<I extends {
        egressId?: string | undefined;
        roomId?: string | undefined;
        status?: EgressStatus | undefined;
        webComposite?: {
            roomName?: string | undefined;
            layout?: string | undefined;
            audioOnly?: boolean | undefined;
            videoOnly?: boolean | undefined;
            customBaseUrl?: string | undefined;
            file?: {
                fileType?: EncodedFileType | undefined;
                filepath?: string | undefined;
                s3?: {
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } | undefined;
                gcp?: {
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } | undefined;
                azure?: {
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } | undefined;
            } | undefined;
            stream?: {
                protocol?: StreamProtocol | undefined;
                urls?: string[] | undefined;
            } | undefined;
            preset?: EncodingOptionsPreset | undefined;
            advanced?: {
                width?: number | undefined;
                height?: number | undefined;
                depth?: number | undefined;
                framerate?: number | undefined;
                audioCodec?: AudioCodec | undefined;
                audioBitrate?: number | undefined;
                audioFrequency?: number | undefined;
                videoCodec?: VideoCodec | undefined;
                videoBitrate?: number | undefined;
            } | undefined;
        } | undefined;
        trackComposite?: {
            roomName?: string | undefined;
            audioTrackId?: string | undefined;
            videoTrackId?: string | undefined;
            file?: {
                fileType?: EncodedFileType | undefined;
                filepath?: string | undefined;
                s3?: {
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } | undefined;
                gcp?: {
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } | undefined;
                azure?: {
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } | undefined;
            } | undefined;
            stream?: {
                protocol?: StreamProtocol | undefined;
                urls?: string[] | undefined;
            } | undefined;
            preset?: EncodingOptionsPreset | undefined;
            advanced?: {
                width?: number | undefined;
                height?: number | undefined;
                depth?: number | undefined;
                framerate?: number | undefined;
                audioCodec?: AudioCodec | undefined;
                audioBitrate?: number | undefined;
                audioFrequency?: number | undefined;
                videoCodec?: VideoCodec | undefined;
                videoBitrate?: number | undefined;
            } | undefined;
        } | undefined;
        track?: {
            roomName?: string | undefined;
            trackId?: string | undefined;
            httpUrl?: string | undefined;
            websocketUrl?: string | undefined;
        } | undefined;
        stream?: {
            info?: {
                url?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
            }[] | undefined;
        } | undefined;
        file?: {
            filename?: string | undefined;
            startedAt?: number | undefined;
            endedAt?: number | undefined;
            size?: number | undefined;
            location?: string | undefined;
        } | undefined;
        error?: string | undefined;
    } & {
        egressId?: string | undefined;
        roomId?: string | undefined;
        status?: EgressStatus | undefined;
        webComposite?: ({
            roomName?: string | undefined;
            layout?: string | undefined;
            audioOnly?: boolean | undefined;
            videoOnly?: boolean | undefined;
            customBaseUrl?: string | undefined;
            file?: {
                fileType?: EncodedFileType | undefined;
                filepath?: string | undefined;
                s3?: {
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } | undefined;
                gcp?: {
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } | undefined;
                azure?: {
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } | undefined;
            } | undefined;
            stream?: {
                protocol?: StreamProtocol | undefined;
                urls?: string[] | undefined;
            } | undefined;
            preset?: EncodingOptionsPreset | undefined;
            advanced?: {
                width?: number | undefined;
                height?: number | undefined;
                depth?: number | undefined;
                framerate?: number | undefined;
                audioCodec?: AudioCodec | undefined;
                audioBitrate?: number | undefined;
                audioFrequency?: number | undefined;
                videoCodec?: VideoCodec | undefined;
                videoBitrate?: number | undefined;
            } | undefined;
        } & {
            roomName?: string | undefined;
            layout?: string | undefined;
            audioOnly?: boolean | undefined;
            videoOnly?: boolean | undefined;
            customBaseUrl?: string | undefined;
            file?: ({
                fileType?: EncodedFileType | undefined;
                filepath?: string | undefined;
                s3?: {
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } | undefined;
                gcp?: {
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } | undefined;
                azure?: {
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } | undefined;
            } & {
                fileType?: EncodedFileType | undefined;
                filepath?: string | undefined;
                s3?: ({
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } & {
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } & Record<Exclude<keyof I["webComposite"]["file"]["s3"], keyof S3Upload>, never>) | undefined;
                gcp?: ({
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } & {
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } & Record<Exclude<keyof I["webComposite"]["file"]["gcp"], keyof GCPUpload>, never>) | undefined;
                azure?: ({
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } & {
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } & Record<Exclude<keyof I["webComposite"]["file"]["azure"], keyof AzureBlobUpload>, never>) | undefined;
            } & Record<Exclude<keyof I["webComposite"]["file"], keyof EncodedFileOutput>, never>) | undefined;
            stream?: ({
                protocol?: StreamProtocol | undefined;
                urls?: string[] | undefined;
            } & {
                protocol?: StreamProtocol | undefined;
                urls?: (string[] & string[] & Record<Exclude<keyof I["webComposite"]["stream"]["urls"], number | keyof string[]>, never>) | undefined;
            } & Record<Exclude<keyof I["webComposite"]["stream"], keyof StreamOutput>, never>) | undefined;
            preset?: EncodingOptionsPreset | undefined;
            advanced?: ({
                width?: number | undefined;
                height?: number | undefined;
                depth?: number | undefined;
                framerate?: number | undefined;
                audioCodec?: AudioCodec | undefined;
                audioBitrate?: number | undefined;
                audioFrequency?: number | undefined;
                videoCodec?: VideoCodec | undefined;
                videoBitrate?: number | undefined;
            } & {
                width?: number | undefined;
                height?: number | undefined;
                depth?: number | undefined;
                framerate?: number | undefined;
                audioCodec?: AudioCodec | undefined;
                audioBitrate?: number | undefined;
                audioFrequency?: number | undefined;
                videoCodec?: VideoCodec | undefined;
                videoBitrate?: number | undefined;
            } & Record<Exclude<keyof I["webComposite"]["advanced"], keyof EncodingOptions>, never>) | undefined;
        } & Record<Exclude<keyof I["webComposite"], keyof WebCompositeEgressRequest>, never>) | undefined;
        trackComposite?: ({
            roomName?: string | undefined;
            audioTrackId?: string | undefined;
            videoTrackId?: string | undefined;
            file?: {
                fileType?: EncodedFileType | undefined;
                filepath?: string | undefined;
                s3?: {
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } | undefined;
                gcp?: {
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } | undefined;
                azure?: {
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } | undefined;
            } | undefined;
            stream?: {
                protocol?: StreamProtocol | undefined;
                urls?: string[] | undefined;
            } | undefined;
            preset?: EncodingOptionsPreset | undefined;
            advanced?: {
                width?: number | undefined;
                height?: number | undefined;
                depth?: number | undefined;
                framerate?: number | undefined;
                audioCodec?: AudioCodec | undefined;
                audioBitrate?: number | undefined;
                audioFrequency?: number | undefined;
                videoCodec?: VideoCodec | undefined;
                videoBitrate?: number | undefined;
            } | undefined;
        } & {
            roomName?: string | undefined;
            audioTrackId?: string | undefined;
            videoTrackId?: string | undefined;
            file?: ({
                fileType?: EncodedFileType | undefined;
                filepath?: string | undefined;
                s3?: {
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } | undefined;
                gcp?: {
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } | undefined;
                azure?: {
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } | undefined;
            } & {
                fileType?: EncodedFileType | undefined;
                filepath?: string | undefined;
                s3?: ({
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } & {
                    accessKey?: string | undefined;
                    secret?: string | undefined;
                    region?: string | undefined;
                    endpoint?: string | undefined;
                    bucket?: string | undefined;
                } & Record<Exclude<keyof I["trackComposite"]["file"]["s3"], keyof S3Upload>, never>) | undefined;
                gcp?: ({
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } & {
                    credentials?: Uint8Array | undefined;
                    bucket?: string | undefined;
                } & Record<Exclude<keyof I["trackComposite"]["file"]["gcp"], keyof GCPUpload>, never>) | undefined;
                azure?: ({
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } & {
                    accountName?: string | undefined;
                    accountKey?: string | undefined;
                    containerName?: string | undefined;
                } & Record<Exclude<keyof I["trackComposite"]["file"]["azure"], keyof AzureBlobUpload>, never>) | undefined;
            } & Record<Exclude<keyof I["trackComposite"]["file"], keyof EncodedFileOutput>, never>) | undefined;
            stream?: ({
                protocol?: StreamProtocol | undefined;
                urls?: string[] | undefined;
            } & {
                protocol?: StreamProtocol | undefined;
                urls?: (string[] & string[] & Record<Exclude<keyof I["trackComposite"]["stream"]["urls"], number | keyof string[]>, never>) | undefined;
            } & Record<Exclude<keyof I["trackComposite"]["stream"], keyof StreamOutput>, never>) | undefined;
            preset?: EncodingOptionsPreset | undefined;
            advanced?: ({
                width?: number | undefined;
                height?: number | undefined;
                depth?: number | undefined;
                framerate?: number | undefined;
                audioCodec?: AudioCodec | undefined;
                audioBitrate?: number | undefined;
                audioFrequency?: number | undefined;
                videoCodec?: VideoCodec | undefined;
                videoBitrate?: number | undefined;
            } & {
                width?: number | undefined;
                height?: number | undefined;
                depth?: number | undefined;
                framerate?: number | undefined;
                audioCodec?: AudioCodec | undefined;
                audioBitrate?: number | undefined;
                audioFrequency?: number | undefined;
                videoCodec?: VideoCodec | undefined;
                videoBitrate?: number | undefined;
            } & Record<Exclude<keyof I["trackComposite"]["advanced"], keyof EncodingOptions>, never>) | undefined;
        } & Record<Exclude<keyof I["trackComposite"], keyof TrackCompositeEgressRequest>, never>) | undefined;
        track?: ({
            roomName?: string | undefined;
            trackId?: string | undefined;
            httpUrl?: string | undefined;
            websocketUrl?: string | undefined;
        } & {
            roomName?: string | undefined;
            trackId?: string | undefined;
            httpUrl?: string | undefined;
            websocketUrl?: string | undefined;
        } & Record<Exclude<keyof I["track"], keyof TrackEgressRequest>, never>) | undefined;
        stream?: ({
            info?: {
                url?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
            }[] | undefined;
        } & {
            info?: ({
                url?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
            }[] & ({
                url?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
            } & {
                url?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
            } & Record<Exclude<keyof I["stream"]["info"][number], keyof StreamInfo>, never>)[] & Record<Exclude<keyof I["stream"]["info"], number | keyof {
                url?: string | undefined;
                startedAt?: number | undefined;
                endedAt?: number | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["stream"], "info">, never>) | undefined;
        file?: ({
            filename?: string | undefined;
            startedAt?: number | undefined;
            endedAt?: number | undefined;
            size?: number | undefined;
            location?: string | undefined;
        } & {
            filename?: string | undefined;
            startedAt?: number | undefined;
            endedAt?: number | undefined;
            size?: number | undefined;
            location?: string | undefined;
        } & Record<Exclude<keyof I["file"], keyof FileInfo>, never>) | undefined;
        error?: string | undefined;
    } & Record<Exclude<keyof I, keyof EgressInfo>, never>>(object: I): EgressInfo;
};
export declare const StreamInfoList: {
    encode(message: StreamInfoList, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StreamInfoList;
    fromJSON(object: any): StreamInfoList;
    toJSON(message: StreamInfoList): unknown;
    fromPartial<I extends {
        info?: {
            url?: string | undefined;
            startedAt?: number | undefined;
            endedAt?: number | undefined;
        }[] | undefined;
    } & {
        info?: ({
            url?: string | undefined;
            startedAt?: number | undefined;
            endedAt?: number | undefined;
        }[] & ({
            url?: string | undefined;
            startedAt?: number | undefined;
            endedAt?: number | undefined;
        } & {
            url?: string | undefined;
            startedAt?: number | undefined;
            endedAt?: number | undefined;
        } & Record<Exclude<keyof I["info"][number], keyof StreamInfo>, never>)[] & Record<Exclude<keyof I["info"], number | keyof {
            url?: string | undefined;
            startedAt?: number | undefined;
            endedAt?: number | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "info">, never>>(object: I): StreamInfoList;
};
export declare const StreamInfo: {
    encode(message: StreamInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): StreamInfo;
    fromJSON(object: any): StreamInfo;
    toJSON(message: StreamInfo): unknown;
    fromPartial<I extends {
        url?: string | undefined;
        startedAt?: number | undefined;
        endedAt?: number | undefined;
    } & {
        url?: string | undefined;
        startedAt?: number | undefined;
        endedAt?: number | undefined;
    } & Record<Exclude<keyof I, keyof StreamInfo>, never>>(object: I): StreamInfo;
};
export declare const FileInfo: {
    encode(message: FileInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): FileInfo;
    fromJSON(object: any): FileInfo;
    toJSON(message: FileInfo): unknown;
    fromPartial<I extends {
        filename?: string | undefined;
        startedAt?: number | undefined;
        endedAt?: number | undefined;
        size?: number | undefined;
        location?: string | undefined;
    } & {
        filename?: string | undefined;
        startedAt?: number | undefined;
        endedAt?: number | undefined;
        size?: number | undefined;
        location?: string | undefined;
    } & Record<Exclude<keyof I, keyof FileInfo>, never>>(object: I): FileInfo;
};
export interface Egress {
    /** start recording or streaming a room, participant, or tracks */
    StartWebCompositeEgress(request: WebCompositeEgressRequest): Promise<EgressInfo>;
    /** update web composite layout */
    UpdateLayout(request: UpdateLayoutRequest): Promise<EgressInfo>;
    /** add or remove stream endpoints */
    UpdateStream(request: UpdateStreamRequest): Promise<EgressInfo>;
    /** list available egress */
    ListEgress(request: ListEgressRequest): Promise<ListEgressResponse>;
    /** stop a recording or stream */
    StopEgress(request: StopEgressRequest): Promise<EgressInfo>;
}
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
